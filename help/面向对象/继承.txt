1.继承是java实现代码重用的重要手段之一 是在已有的类进行改造和扩充（java只支持单继承）

2.继承后都继承了什么？继承public与peotected修饰的属性和方法，不管是不是在同一个包里。

继承默认权限修饰符修饰的属性和方法，但是子类和父类必须在同一个包里

无法继承private修饰的属性和方法，无法继承父类的构造方法

3.方法重写：
必须满足的要求：必须具有相同的方法名  必须就有相同的参数列表   返回值类型必须相同  不能缩小被重写方法的访问权限

此处：如果使用了方法重写，但是又想调用父类的被重写的方法，就应该使用super关键字

4.super关键字：代表当前对象的直接父类对象的默认引用

super必须出现在子类的方法和构造方法中，而不是其他位置

super可以访问父类的：属性  方法  构造方法  无法访问private修饰的成员

5.构造方法：主要用于对象初始化（将对象的各个属性赋值）

在初始化子类的时候，也需要同时初始化父类的属性

6.继承条件下的构造方法：

如果子类的构造方法中没有通过super显示调用父类的有参构造方法也没有通过this显示调用自身的其它构造方法，会默认调用父类的无参构造方法。

如果子类的构造方法中，通过super显示调用父类的有参构造方法，将执行父类相应的构造方法。（不执行父类无参构造方法）

Object类：是所有类的父类
object类比较常用的方法:toString() equals() clone()  hashCode()  getClass()

7.Object的equals()方法  （比较的是，两个对象是否是同一个引用对象）

相等的属性值：两个对象具有相同的类型，相同的属性值  

同一个引用对象：两个引用对象指向同一个对象，即指向同一个地址

8.“==”也可以来判断是否相等，==的两边可以是基本数据类型（比如数字、字符、等）也可以是对象等引用数据类型

如果是：基本数据类型那么比较的就是，他们的值了
如果是：引用数据类型那比较的就是，是否指向同一个引用

String str1=new String();
String str2=new String();
System.out.println(str1.equals(str2));
结果为：true
equals比较的是两个对象是否是同一个对象，结果为什么是true呢（原因就在于String重写了equals方法，把原来的判断是同一个引用对象的equals方法，变为了值的比较）

instanceof：判断是不是同一类型



